//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/ControlsPC.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlsPC : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlsPC()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlsPC"",
    ""maps"": [
        {
            ""name"": ""GameplayControls"",
            ""id"": ""0749e31b-8d86-4655-b4e0-ba9de88d1daa"",
            ""actions"": [
                {
                    ""name"": ""SwitchWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""ae54b088-d435-4894-b4a0-dfd3498f6ada"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire1"",
                    ""type"": ""Button"",
                    ""id"": ""0320eee0-4f35-4388-b00e-c307004cdddc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire2"",
                    ""type"": ""Button"",
                    ""id"": ""b1ddbb4e-c417-45ee-aead-c5530c5216bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""b81edf36-6db1-42bd-8995-bc033aba293e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b3fe6885-7e11-48af-8332-29fc3924cc7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""aed06b62-3514-4fe4-8bee-e180574a33d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move1"",
                    ""type"": ""Value"",
                    ""id"": ""3c662984-62f2-4253-9aba-3e57c179b0ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move2"",
                    ""type"": ""Button"",
                    ""id"": ""509eca1f-c054-4234-8084-4ae71a828399"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d09d2830-cda7-4d47-8507-8cd68b37d854"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseResume"",
                    ""type"": ""Button"",
                    ""id"": ""de1e7efb-c69a-4e5c-b625-c0b3b70135d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""902e1a7c-1543-492f-a6e8-4071df978249"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fbaac51-605e-42cd-8305-14a325b6a610"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29dfb38d-9cfa-4ac6-ae03-d0972abb7aa2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8053adcf-0ff5-4355-966b-ed3946e0428e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d631ab67-328a-4620-bc67-8eec66be4a45"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea4cc00e-5653-4c13-85bb-2138693ce4a4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5609ddb-b0b3-438d-9f94-707a3cc5cb1b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5644f4b9-5650-41b5-b1e3-ff0681def859"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9fd83da-18c4-41fe-909a-97982f29d868"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c94697a6-a1dd-47a9-9a28-6343727ea5bd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6a9bb9b-9dda-431d-871d-60ece573f93c"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""9c1fa11a-e950-4e0b-b06d-b990602ff311"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""58e8f6aa-7ddf-496e-9bf8-385871eb1831"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9adc969b-1d4a-44f0-90a9-18668f140b97"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d027bc52-47ab-4c78-96da-3779adffc8de"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a3a077b2-27ea-47a5-b7a7-e23c2d0fcd11"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""83c2404b-071f-4b77-a710-fd34ceef4d97"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseResume"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameplayControls
        m_GameplayControls = asset.FindActionMap("GameplayControls", throwIfNotFound: true);
        m_GameplayControls_SwitchWeapon = m_GameplayControls.FindAction("SwitchWeapon", throwIfNotFound: true);
        m_GameplayControls_Fire1 = m_GameplayControls.FindAction("Fire1", throwIfNotFound: true);
        m_GameplayControls_Fire2 = m_GameplayControls.FindAction("Fire2", throwIfNotFound: true);
        m_GameplayControls_Reload = m_GameplayControls.FindAction("Reload", throwIfNotFound: true);
        m_GameplayControls_Interact = m_GameplayControls.FindAction("Interact", throwIfNotFound: true);
        m_GameplayControls_Jump = m_GameplayControls.FindAction("Jump", throwIfNotFound: true);
        m_GameplayControls_Move1 = m_GameplayControls.FindAction("Move1", throwIfNotFound: true);
        m_GameplayControls_Move2 = m_GameplayControls.FindAction("Move2", throwIfNotFound: true);
        m_GameplayControls_Look = m_GameplayControls.FindAction("Look", throwIfNotFound: true);
        m_GameplayControls_PauseResume = m_GameplayControls.FindAction("PauseResume", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameplayControls
    private readonly InputActionMap m_GameplayControls;
    private IGameplayControlsActions m_GameplayControlsActionsCallbackInterface;
    private readonly InputAction m_GameplayControls_SwitchWeapon;
    private readonly InputAction m_GameplayControls_Fire1;
    private readonly InputAction m_GameplayControls_Fire2;
    private readonly InputAction m_GameplayControls_Reload;
    private readonly InputAction m_GameplayControls_Interact;
    private readonly InputAction m_GameplayControls_Jump;
    private readonly InputAction m_GameplayControls_Move1;
    private readonly InputAction m_GameplayControls_Move2;
    private readonly InputAction m_GameplayControls_Look;
    private readonly InputAction m_GameplayControls_PauseResume;
    public struct GameplayControlsActions
    {
        private @ControlsPC m_Wrapper;
        public GameplayControlsActions(@ControlsPC wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchWeapon => m_Wrapper.m_GameplayControls_SwitchWeapon;
        public InputAction @Fire1 => m_Wrapper.m_GameplayControls_Fire1;
        public InputAction @Fire2 => m_Wrapper.m_GameplayControls_Fire2;
        public InputAction @Reload => m_Wrapper.m_GameplayControls_Reload;
        public InputAction @Interact => m_Wrapper.m_GameplayControls_Interact;
        public InputAction @Jump => m_Wrapper.m_GameplayControls_Jump;
        public InputAction @Move1 => m_Wrapper.m_GameplayControls_Move1;
        public InputAction @Move2 => m_Wrapper.m_GameplayControls_Move2;
        public InputAction @Look => m_Wrapper.m_GameplayControls_Look;
        public InputAction @PauseResume => m_Wrapper.m_GameplayControls_PauseResume;
        public InputActionMap Get() { return m_Wrapper.m_GameplayControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayControlsActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayControlsActions instance)
        {
            if (m_Wrapper.m_GameplayControlsActionsCallbackInterface != null)
            {
                @SwitchWeapon.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnSwitchWeapon;
                @Fire1.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire1;
                @Fire1.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire1;
                @Fire1.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire1;
                @Fire2.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire2;
                @Fire2.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire2;
                @Fire2.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnFire2;
                @Reload.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnReload;
                @Interact.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnInteract;
                @Jump.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnJump;
                @Move1.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove1;
                @Move1.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove1;
                @Move1.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove1;
                @Move2.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove2;
                @Move2.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove2;
                @Move2.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnMove2;
                @Look.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnLook;
                @PauseResume.started -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnPauseResume;
                @PauseResume.performed -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnPauseResume;
                @PauseResume.canceled -= m_Wrapper.m_GameplayControlsActionsCallbackInterface.OnPauseResume;
            }
            m_Wrapper.m_GameplayControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SwitchWeapon.started += instance.OnSwitchWeapon;
                @SwitchWeapon.performed += instance.OnSwitchWeapon;
                @SwitchWeapon.canceled += instance.OnSwitchWeapon;
                @Fire1.started += instance.OnFire1;
                @Fire1.performed += instance.OnFire1;
                @Fire1.canceled += instance.OnFire1;
                @Fire2.started += instance.OnFire2;
                @Fire2.performed += instance.OnFire2;
                @Fire2.canceled += instance.OnFire2;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Move1.started += instance.OnMove1;
                @Move1.performed += instance.OnMove1;
                @Move1.canceled += instance.OnMove1;
                @Move2.started += instance.OnMove2;
                @Move2.performed += instance.OnMove2;
                @Move2.canceled += instance.OnMove2;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @PauseResume.started += instance.OnPauseResume;
                @PauseResume.performed += instance.OnPauseResume;
                @PauseResume.canceled += instance.OnPauseResume;
            }
        }
    }
    public GameplayControlsActions @GameplayControls => new GameplayControlsActions(this);
    public interface IGameplayControlsActions
    {
        void OnSwitchWeapon(InputAction.CallbackContext context);
        void OnFire1(InputAction.CallbackContext context);
        void OnFire2(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMove1(InputAction.CallbackContext context);
        void OnMove2(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnPauseResume(InputAction.CallbackContext context);
    }
}
